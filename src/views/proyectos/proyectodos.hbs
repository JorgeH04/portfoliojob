 <div class="container-fluid bg-gray mt-5">
 	<div class="container pt-5">
 		<div class="row">
 			<div class="col-sm-12 text-center">
 				<h1 class="pb-3">Detalles del proyecto</h1>
 				<div class="orange-line m-auto"></div>
 				
 			</div>
 		</div>
 	</div>


<div class="container mt-4">
	<div class="row">
		<div class="col-md-6">
			<h2>Tecnologías <strong class="text-primary">utilizadas </strong></h2>
			<hr>
			<p> Tienda Online </p>
			
			<p><i class="fa fa-pencil-square-o"></i> Backend: Node JS </p>
			<p><i class="fa fa-pencil-square-o" aria-hidden="true"></i> Frontend: EJS, HTML, CSS, Bootstrap </p>
			<p><i class="fa fa-pencil-square-o" aria-hidden="true"></i> Database: MongoDB</p>
            <p><i class="fa fa-pencil-square-o" aria-hidden="true"></i> Cloud: Heroku - Mongodb Cloud</p>
            <p><i class="fa fa-pencil-square-o" aria-hidden="true"></i> URL: https://jorhessapp7.herokuapp.com/ </p>
            <p><i class="fa fa-pencil-square-o" aria-hidden="true"></i> Cloud: Heroku - Mongodb Cloud</p>


</div>

<div class="container mt-4">
	<div class="row">
		<div class="col-md-6">
			<h2>Descripción <strong class="text-primary">utilizadas </strong></h2>
			<hr>
			
			
</div>

<div class="container p-4">
   <div class="row">
      <div class= "col-md-10 mt-5">
           <p>

			   	<li><i class="fas fa-asterisk"></i> Desplazamiento suave a través de las diferentes secciones</li> <br>
				<li><i class="fas fa-asterisk"></i>  Para efectuar una compra el usuario estará obligado a hacerse una cuenta
Los usuarios deberan registrarse y luego loguearse para poder efectuar los pagos
Cada usuario tendrá su propia cuenta que no interferirá con los datos del otro</li> <br>

			   	<li><i class="fas fa-asterisk"></i> Gracias el módulo express-session podemos crear sesiones dentro del servidor y cuando 
el usuario se autentique luego podra seguir visitando otras ppaginas sin la necesidad de que 
se vuelva a autenticar. Y eso será posible dado que sus datos quedarán almacenados en una sesion</li> <br>

			   	<li><i class="fas fa-asterisk"></i>	bcryptjs aplica un algoritmo a determinado string y permite convertirlo en un hash
y asi la contraseña es cifrada</li> <br>



				<li><i class="fas fa-asterisk"></i> Posibilidad de acceder a un backend oculto a través de esta URL: </li> <br>
				<li><i class="fas fa-asterisk"></i> Motor de plantilla que es una manera de extender el html y así poder dotarlo de bucles, condicionales
le agrega funcionalidad extra al html</li> <br>
                     

		
		 
               
               
               Este proyecto se trata de una tienda online   <br><br>
    Los productos estan divididos en secciones en una barra en la parte izquierda
    El cliente tendrá la posibilidad de agregar, editar o eliminar sus productos a través de una
    url https://utilescarro.herokuapp.com/foliosindex 


Configurar el servidor con express





mongoose que nos permite unir a express con mongo y nos permite contectarnos a mongo

passport
passport-local


crear las rutas para aliminar, editar

ya usamos js el lado del front y al usarlo del back ya hay conceptos en comujn
rest api son rutas q vamos a poder  consumor
peticiones get para obtener datos

app cliente unida a un servidor c una rest api

la app de angular pide las rutas al servidor

</p>


       </div>
    </div>
</div>



   </div>
    </div>
</div>




